<<<<<<< HEAD
,public,private,protected,friend
ABAP Objects,public section.[21] data field type type.,private section.[21] data field type type.,protected section.[21] data field type type.,[22]
APL (Dyalog),:Field Public field «? value»,:Field «Private» field «? value»,,
C++ (STL),public: type field;,private: type field;,protected: type field;,[23]
C#,public type field «= value»;,private type field «= value»;,protected type field «= value»;,internal type field «= value»;
D,,,,package type field «= value»;
Java,,,protected type field «= value»;,type field «= value»;
eC,public type field;,private type field;,,
Eiffel,feature field: TYPE,feature {NONE} field: TYPE,feature {current_class} field: TYPE,feature {FRIEND} field: TYPE
Objective-C,@public type field;,@private type field;,@protected type field;,@package type field;
Swift,colspan=4 ,,,
Smalltalk,colspan=2 ,[24],,
Python,self.field = value[25],,colspan=2 ,
Visual Basic .NET,Public field As type «= value»,Private field As type «= value»,Protected field As type «= value»,Friend field As type «= value»
Xojo,Public field As type «= value»,Private field As type «= value»,Protected field As type «= value»,
PHP,public $field «= value»;,private $field «= value»;,protected $field «= value»;,
Perl,$self->{field} = value;[25],colspan=3 ,,
Raku,has« type »$.field« is rw»,has« type »$!field,colspan=2 ,
Ruby,colspan=2 ,@field = value[25],,
Windows PowerShell,Add-Member «-MemberType »NoteProperty «-Name »Bar «-Value »value -InputObject variable,colspan=3 ,,
OCaml,colspan=2 ,val «mutable» field = value,rowspan=2 ,
F#,,let «mutable» field = value,,
JavaScript,this.field = value this["field"] = value[25],,,
COBOL,,level-number field clauses.[27],,
Cobra,var field «as type» «= value»,var __field «as type» «= value»,var _field «as type» «= value»,
ISLISP,(field :initform value :accessor accessor-name :initarg keyword),,,
=======
,Has member?,,Handler for missing member,
! Method,Field,Method,Field,
APL (Dyalog),3=x.?NC'method',2=x.?NC'method',colspan=2 ,
ABAP Objects,rowspan=2 colspan=4 ,,,
C++ (STL),,,,
Objective-C (Cocoa),[x respondsToSelector:@selector(method)],,forwardInvocation:,
Smalltalk,x respondsTo: selector,,doesNotUnderstand:,
C#,(using reflection),,,
eC,,,,
Java,,,,
D,,,opDispatch(),
Eiffel,colspan=4 ,,,
Python,"hasattr(x, "method") and callable(x.method)","hasattr(x, "field")",__getattr__(),
Visual Basic .NET,(using reflection),,,
Xojo,(using Introspection),,,
Windows PowerShell,(using reflection),,,
F#,(using reflection),,,
Ruby,x.respond_to?(:method),,method_missing(),
PHP,"method_exists(x, "method")","property_exists(x, "field")",__call(),__get() / __set()
Perl,x->can("method"),exists x->{field},AUTOLOAD,
Raku,x.can("method"),x.field.defined,AUTOLOAD,
OCaml,colspan=4 ,,,
JavaScript,typeof x.method === "function",field in x,,
COBOL,colspan=4 ,,,
>>>>>>> ff4582384893868142f1b485861afa33c91d9c67
