<<<<<<< HEAD
,unary,binary,function call
ABAP Objects,N/A,,
C++ (STL),type operator symbol () { instructions },type operator symbol (type operand2) { instructions },type operator () («parameters») { instructions }
C#,static type operator symbol(type operand) { instructions },"static type operator symbol(type operand1, type operand2) { instructions }",N/A
D,type opUnary(string s)() if (s == "symbol") { instructions },type opBinary(string s)(type operand2) if (s == "symbol") { instructions } type opBinaryRight(string s)(type operand1) if (s == "symbol") switch (s) { instructions },type opCall(«parameters») { instructions }
Java,N/A,,
Objective-C,,,
Swift,func symbol(operand1 : type) -> returntype { instructions } (outside class),"func symbol(operand1 : type1, operand2 : type2) -> returntype { instructions } (outside class)",
Eiffel[35],op_name alias "symbol": TYPE do instructions end,op_name alias "symbol" (operand: TYPE1): TYPE2 do instructions end,
Python,def __opname__(self): Tab ? instructions Tab ? return value,"def __opname__(self, operand2): Tab ? instructions Tab ? return value","def __call__(self«, paramters»): Tab ? instructions Tab ? return value"
Visual Basic .NET,Shared Operator symbol(operand As type) As type instructions End Operator,"Shared Operator symbol(operand1 As type, operand2 As type) As type instructions End Operator",N/A
Xojo,Function Operator_name(operand As type) As type instructions End Function,N/A,
PHP,[36],,function __invoke(«parameters») { instructions } (PHP 5.3+)
Perl,use overload "symbol" => sub { my ($self) = @_; instructions };,"use overload "symbol" => sub { my ($self, $operand2, $operands_reversed) = @_; instructions };",
Raku,«our «type »»«multi »method prefix:<symbol> («$operand: ») { instructions ... return value; } or «our «type »»«multi »method postfix:<symbol> («$operand: ») { instructions ... return value; } or «our «type »»«multi »method circumfix:<symbol1 symbol2> («$operand: ») { instructions ... return value; },«our «type »»«multi »method infix:<symbol> («$operand1: » type operand2) { instructions ... return value; },«our «type »»«multi »method postcircumfix:<( )> («$self: » «parameters») { instructions }
Ruby,def symbol instructions expression resulting in return value end,def symbol(operand2) instructions expression resulting in return value end,N/A
Windows PowerShell,N/A,,
OCaml,,,
F#,static member (symbol) operand = expression,"static member (symbol) (operand1, operand2) = expression",N/A
COBOL,N/A,,
ISLISP,N/A,,
=======
,String representation,,Object copy,Value equality,Object comparison,Hash code,Object ID
,Human-readable,Source-compatible,,,,,
ABAP Objects,N/A,,,,,,
APL (Dyalog),?x,?SRC x,?NS x,x = y,N/A,,
C++ (STL),,,,x == y[50],,,pointer to object can be converted into an integer ID
C#,x.ToString(),,x.Clone(),x.Equals(y),x.CompareTo(y),x.GetHashCode(),System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(x)
Java,x.toString(),,x.clone()[51],x.equals(y),x.compareTo(y)[52],x.hashCode(),System.identityHashCode(x)
JavaScript,x.toString(),,,,,,
D,x.toString() or std.conv.to!string(x),x.stringof,,x == y or x.opEquals(y),x.opCmp(y),x.toHash(),
eC,"x.OnGetString(tempString, null, null) or PrintString(x)",,y.OnCopy(x),,x.OnCompare(y),,object handle can be converted into an integer ID
Objective-C (Cocoa),x.description,x.debugDescription,[x copy][53],[x isEqual:y],[x compare:y][54],x.hash,pointer to object can be converted into an integer ID
Swift,x.description[55],x.debugDescription[56],,x == y[57],x < y[58],x.hashValue[59],reflect(x).objectIdentifier!.uintValue()
Smalltalk,x displayString,x printString,x copy,x = y,,x hash,x identityHash
Python,str(x)[60],repr(x)[61],copy.copy(x)[62],x == y[63],"cmp(x, y)[64]",hash(x)[65],id(x)
Visual Basic .NET,x.ToString(),,x.Clone(),x.Equals(y),x.CompareTo(y),x.GetHashCode(),
Eiffel,x.out,,x.twin,x.is_equal(y),"When x is COMPARABLE, one can simply do x < y","When x is HASHABLE, one can use x.hash_code","When x is IDENTIFIED, one can use x.object_id"
PHP,$x->__toString(),,clone x[66],x == y,,,spl_object_hash(x)
Perl,"$x"[67],"Data::Dumper->Dump([$x],['x'])[68]",Storable::dclone($x)[69],,,,Scalar::Util::refaddr( $x )[70]
Raku,~x[67],x.perl,x.clone,x eqv y,x cmp y,,x.WHICH
Ruby,x.to_s,x.inspect,x.dup or x.clone,x == y or x.eql?(y),x <=> y,x.hash,x.object_id
Windows PowerShell,x.ToString(),,x.Clone(),x.Equals(y),x.CompareTo(y),x.GetHashCode(),
OCaml,,,Oo.copy x,x = y,,Hashtbl.hash x,Oo.id x
F#,string x or x.ToString() or sprintf "%O" x,sprintf "%A" x,x.Clone(),x = y or x.Equals(y),compare x y or x.CompareTo(y),hash x or x.GetHashCode(),
COBOL,N/A,,,,,,
>>>>>>> ff4582384893868142f1b485861afa33c91d9c67
