<<<<<<< HEAD
,read-write,read-only,write-only
ABAP Objects,N/A,,
C++ (STL),N/A,,
C#,type Bar { get; set; },type Bar { get; private set; },type Bar { private get; set; }
D,N/A,,
Java,N/A,,
Objective-C 2.0 (Cocoa),@property (readwrite) type bar; and then inside @implementation @synthesize bar;,@property (readonly) type bar; and then inside @implementation @synthesize bar;,N/A
Swift,var bar : type,let bar : type,N/A
Eiffel,,,
Python,"@property def bar(self): Tab ?instructions @bar.setter def bar(self, value): Tab ?instructions",@property def bar(self): Tab ?instructions,"bar = property() @bar.setter def bar(self, value): Tab ?instructions"
Visual Basic .NET,Property Bar As type« = initial_value» (VB 10),,
PHP,,,
Perl[34],use base qw(Class::Accessor); __PACKAGE__->mk_accessors('Bar');,use base qw(Class::Accessor); __PACKAGE__->mk_ro_accessors('Bar');,use base qw(Class::Accessor); __PACKAGE__->mk_wo_accessors('Bar');
Raku,N/A,,
Ruby,attr_accessor :bar,attr_reader :bar,attr_writer :bar
Windows PowerShell,,,
OCaml,N/A,,
F#,"member val Bar = value with get, set",,
COBOL,level-number bar clauses PROPERTY.,level-number bar clauses PROPERTY «WITH» NO SET.,level-number bar clauses PROPERTY «WITH» NO GET.
Cobra,pro bar from var «as type»,get bar from var «as type»,set bar from var «as type»
=======
,Has member?,,Handler for missing member,
,Method,Field,Method,Field
APL (Dyalog),3=x.?NC'method',2=x.?NC'method',N/A,
ABAP Objects,N/A,,,
C++ (STL),,,,
Objective-C (Cocoa),[x respondsToSelector:@selector(method)],N/A,forwardInvocation:,N/A
Smalltalk,x respondsTo: selector,N/A,doesNotUnderstand:,N/A
C#,(using reflection),,,
eC,,,,
Java,,,,
D,,,opDispatch(),
Eiffel,N/A,,,
Python,"hasattr(x, "method") and callable(x.method)","hasattr(x, "field")",__getattr__(),
Visual Basic .NET,(using reflection),,,
Xojo,(using Introspection),,,
Windows PowerShell,(using reflection),,,
F#,(using reflection),,,
Ruby,x.respond_to?(:method),N/A,method_missing(),N/A
PHP,"method_exists(x, "method")","property_exists(x, "field")",__call(),__get() / __set()
Perl,x->can("method"),exists x->{field},AUTOLOAD,
Raku,x.can("method"),x.field.defined,AUTOLOAD,
OCaml,N/A,,,
JavaScript,typeof x.method === "function",field in x,,
COBOL,N/A,,,
>>>>>>> ff4582384893868142f1b485861afa33c91d9c67
