<<<<<<< HEAD
,read from,write to,
,stdin,stdout,stderr
Ada[1],Get (x),Put (x),"Put (Standard_Error, x)"
ALGOL 68,"readf(($format$, x)); or getf(stand in, ($format$, x));","printf(($format$, x)); or putf(stand out, ($format$, x));","putf(stand error, ($format$, x));[a]"
APL,x??,??x,??x
C (C99),"scanf(format, &x); or fscanf(stdin, format, &x); [b]","printf( format, x); or fprintf(stdout, format, x); [c]","fprintf(stderr, format, x );[d]"
Objective-C,data = [[NSFileHandle fileHandleWithStandardInput] readDataToEndOfFile];,[[NSFileHandle fileHandleWithStandardOutput] writeData:data];,[[NSFileHandle fileHandleWithStandardError] writeData:data];
C++,"«std::»cin >> x; or «std::»getline(«std::»cin, str);",«std::»cout << x;,«std::»cerr << x; or «std::»clog << x;
C#,x = Console.Read(); orx = Console.ReadLine();,"Console.Write(«format, »x); or Console.WriteLine(«format, »x);","Console.Error.Write(«format, »x); or Console.Error.WriteLine(«format, »x);"
D,x = std.stdio.readln(),"std.stdio.write(x) or std.stdio.writeln(x) or std.stdio.writef(format, x) or std.stdio.writefln(format, x)","stderr.write(x) or stderr.writeln(x) or std.stdio.writef(stderr, format, x) or std.stdio.writefln(stderr, format, x)"
Java,x = System.in.read(); or x = new Scanner(System.in).nextInt(); or x = new Scanner(System.in).nextLine();,"System.out.print(x); or System.out.printf(format, x); or System.out.println(x);","System.err.print(x); or System.err.printf(format, x); or System.err.println(x);"
Go,"fmt.Scan(&x) or fmt.Scanf(format, &x) or x = bufio.NewReader(os.Stdin).ReadString('\n')","fmt.Println(x) or fmt.Printf(format, x)","fmt.Fprintln(os.Stderr, x) or fmt.Fprintf(os.Stderr, format, x)"
Swift,x = readLine() (2.x),print(x) (2.x) println(x) (1.x),
JavaScript Web Browser implementation,,document.write(x),
JavaScript Active Server Pages,,Response.Write(x),
JavaScript Windows Script Host,x = WScript.StdIn.Read(chars) or x = WScript.StdIn.ReadLine(),WScript.Echo(x) or WScript.StdOut.Write(x) or WScript.StdOut.WriteLine(x),WScript.StdErr.Write(x) or WScript.StdErr.WriteLine(x)
Common Lisp,(setf x (read-line)),(princ x) or (format t format x),(princ x *error-output*) or (format *error-output* format x)
Scheme (R6RS),(define x (read-line)),(display x) or (format #t format x),(display x (current-error-port)) or (format (current-error-port) format x)
ISLISP,(setf x (read-line)),(format (standard-output) format x),(format (error-output) format x)
Pascal,read(x); or readln(x);,write(x); or writeln(x);,"write(stderr, x); or writeln(stderr, x);"
Visual Basic,"Input« prompt,» x",Print x or ? x,N/A
Visual Basic .NET,x = Console.Read() or x = Console.ReadLine(),"Console.Write(«format, »x) or Console.WriteLine(«format, »x)","Console.Error.Write(«format, »x) or Console.Error.WriteLine(«format, »x)"
Xojo,x = StandardInputStream.Read() or x = StandardInputStreame.ReadLine(),StandardOutputStream.Write(x) or StandardOutputStream.WriteLine(x),StdErr.Write(x) or StdErr.WriteLine(x)
Python 2.x,x = raw_input(«prompt»),print x or sys.stdout.write(x),"print >> sys.stderr, x or sys.stderr.write(x)"
Python 3.x,x = input(«prompt»),"print(x«, end=""»)","print(x«, end=""», file=sys.stderr)"
S-Lang,"fgets (&x, stdin)","fputs (x, stdout)","fputs (x, stderr)"
Fortran,"READ(*,format) variable names or READ(INPUT_UNIT,format) variable names[e]","WRITE(*,format) expressions or WRITE(OUTPUT_UNIT,format) expressions[e]","WRITE(ERROR_UNIT,format) expressions[e]"
Forth,buffer length ACCEPT ( # chars read ) KEY ( char ),buffer length TYPE char EMIT,N/A
PHP,"$x = fgets(STDIN); or $x = fscanf(STDIN, format);","print x; or echo x; or printf(format, x);","fprintf(STDERR, format, x);"
Perl,$x = <>; or $x = <STDIN>;,"print x; or printf format, x;","print STDERR x; or printf STDERR format, x;"
Raku,$x = $*IN.get;,x.print or x.say,x.note or $*ERR.print(x) or $*ERR.say(x)
Ruby,x = gets,"puts x or printf(format, x)","$stderr.puts(x) or $stderr.printf(format, x)"
Windows PowerShell,$x = Read-Host«« -Prompt» text»; or $x = [Console]::Read(); or $x = [Console]::ReadLine(),x; or Write-Output x; or echo x,Write-Error x
OCaml,let x = read_int () or let str = read_line () or Scanf.scanf format (fun x ... -> ...),print_int x or print_endline str or Printf.printf format x ...,prerr_int x or prerr_endline str or Printf.eprintf format x ...
F#,let x = System.Console.ReadLine(),printf format x ... or printfn format x ...,eprintf format x ... or eprintfn format x ...
Standard ML,val str = TextIO.inputLIne TextIO.stdIn,print str,"TextIO.output (TextIO.stdErr, str)"
Haskell (GHC),x <- readLn or str <- getLine,print x or putStrLn str,hPrint stderr x or hPutStrLn stderr str
COBOL,ACCEPT x,DISPLAY x,
=======
,Argument values,Argument counts,Program name / Script name
Ada[1],Argument (n),Argument_Count,Command_Name
C (C99),argv[n],argc,first argument
Objective-C,,,
C++,,,
C#,args[n],args.Length,Assembly.GetEntryAssembly().Location;
Java,,args.length,
D,,,first argument
JavaScript Windows Script Host implementation,WScript.Arguments(n),WScript.Arguments.length,WScript.ScriptName or WScript.ScriptFullName
Go,os.Args[n],len(os.Args),first argument
Rust[a],std::env::args().nth(n) std::env::args_os().nth(n),std::env::args().count() std::env::args_os().count(),std::env::args().next() std::env::args_os().next()
Swift,Process.arguments[n] or Process.unsafeArgv[n],Process.arguments.count or Process.argc,first argument
Common Lisp,?,?,?
Scheme (R6RS),(list-ref (command-line) n),(length (command-line)),first argument
ISLISP,N/A,N/A,N/A
Pascal,ParamStr(n),ParamCount,first argument
Visual Basic,Command[b],N/A,App.Path
Visual Basic .NET,CmdArgs(n),CmdArgs.Length,[Assembly].GetEntryAssembly().Location
Xojo,System.CommandLine,(string parsing),Application.ExecutableFile.Name
Python,sys.argv[n],len(sys.argv),first argument
S-Lang,__argv[n],__argc,first argument
Fortran,"DO i = 1,argc CALL GET_COMMAND_ARGUMENT (i,argv(i)) ENDDO",argc = COMMAND_ARGUMENT_COUNT (),"CALL GET_COMMAND_ARGUMENT (0,progname)"
PHP,$argv[n],$argc,first argument
Bash shell,"$n ($1, $2, $3, ...) $@ (all arguments)",$#,$0
Perl,$ARGV[n],scalar(@ARGV),$0
Raku,@*ARGS[n],@*ARGS.elems,$PROGRAM_NAME
Ruby,ARGV[n],ARGV.size,$0
Windows PowerShell,$args[n],$args.Length,$MyInvocation.MyCommand.Name
OCaml,Sys.argv.(n),Array.length Sys.argv,first argument
F#,args.[n],args.Length,Assembly.GetEntryAssembly().Location
Standard ML,"List.nth (CommandLine.arguments (), n)",length (CommandLine.arguments ()),CommandLine.name ()
Haskell (GHC),do { args <- System.getArgs; return length args !! n},do { args <- System.getArgs; return length args},System.getProgName
COBOL,[c],,N/A
>>>>>>> ff4582384893868142f1b485861afa33c91d9c67
